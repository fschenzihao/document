import{_ as n,o as s,c as a,e}from"./app-CUvyzFzm.js";const t={},o=e(`<h1 id="vite-cook-book" tabindex="-1"><a class="header-anchor" href="#vite-cook-book"><span>Vite Cook Book</span></a></h1><h2 id="_1-打包去除-console-debugger-内容" tabindex="-1"><a class="header-anchor" href="#_1-打包去除-console-debugger-内容"><span>1.打包去除 console， debugger 内容</span></a></h2><h3 id="terser" tabindex="-1"><a class="header-anchor" href="#terser"><span>terser</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">build</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token string">&quot;terser&quot;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">terserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
   		<span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      		<span class="token literal-property property">drop_console</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
     	 	<span class="token literal-property property">drop_debugger</span><span class="token operator">:</span> <span class="token boolean">true</span>
   		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="esbuild" tabindex="-1"><a class="header-anchor" href="#esbuild"><span>esbuild</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code> <span class="token literal-property property">esbuild</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">drop</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;console&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;debugger&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-rollup-解析-commonjs-模块" tabindex="-1"><a class="header-anchor" href="#_2-rollup-解析-commonjs-模块"><span>2.rollup 解析 CommonJS 模块</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// todo</span>
<span class="token comment">// npm install @rollup/plugin-commonjs --save-dev</span>

<span class="token keyword">import</span> commonjs <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-commonjs&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/index.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">dir</span><span class="token operator">:</span> <span class="token string">&#39;output&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;cjs&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">commonjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-自定义模式" tabindex="-1"><a class="header-anchor" href="#_3-自定义模式"><span>3.自定义模式</span></a></h2><p>演示使用 <code>import.meta.env.VITE_APP_Version</code> 环境变量区分项目的版本：</p><ul><li>在 <code>docs</code> 模式下值为 <code>文档</code>。</li><li>在 <code>library</code> 模式下值为 <code>类库</code>。</li></ul><h3 id="开始" tabindex="-1"><a class="header-anchor" href="#开始"><span>开始</span></a></h3><ul><li><p>新增 <code>package.json</code> 脚本</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev:docs&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite dev --mode docs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dev:library&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build --mode library&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>新增 <code>.env.docs</code> 文件</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># .env.docs
VITE_APP_Version=文档
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>只有以 <code>VITE_</code> 开头的变量名，才能附加到 <code>import.meta.env</code>。</p></div></li><li><p>新增 <code>.env.library</code> 文件</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># .env.library
VITE_APP_Version=类库
NODE_ENV=production
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><ul><li><code>vite dev</code> : 默认为 <code>development</code> (开发) 模式。</li><li><code>vite build</code> : 默认为 <code>production</code> (生产) 模式。</li><li><code>vite dev --mode library</code> 或 <code>vite build --mode library</code>: 自定义模式下，无论 <code>build</code> 还是 <code>dev</code> 命令都为 <code>development</code> (开发) 模式 <code>import.meta.env.PROD</code> = <code>false</code>， 但可以通过 <code>.env</code> 文件的 <code>NODE_ENV=production</code>设置为 <code>production</code> (生产) 模式 <code>import.meta.env.PROD</code> = <code>true</code>。</li></ul></div></li><li><p>新增 <code>env.d.ts</code> 文件</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">/// &lt;reference types=&quot;vite/client&quot; /&gt;</span>

<span class="token keyword">interface</span> <span class="token class-name">ImportMetaEnv</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> VITE_APP_Version<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">ImportMeta</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> env<span class="token operator">:</span> ImportMetaEnv
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span>VITE_APP_Version<span class="token punctuation">)</span> <span class="token comment">// &#39;文档&#39; 或者 &#39;类库&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="_4-打包排除外部模块" tabindex="-1"><a class="header-anchor" href="#_4-打包排除外部模块"><span>4.打包排除外部模块</span></a></h2><p>例如将 <code>element-plus</code> 和 <code>@element-plus/icons-vue</code> 二次封装打包输出自己的组件类库 <code>my-ui</code>，</p><p>若需要实现在用户站点项目里可共用同一 <code>vue</code> 和 <code>element-plus</code> 实例，则打包时需要排除 <code>element-plus</code> 模块代码。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// rollup.config.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> fileURLToPath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;node:url&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
	<span class="token comment">//...,</span>
	<span class="token literal-property property">external</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&#39;vue&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;@element-plus/icons-vue&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;element-plus&#39;</span><span class="token punctuation">,</span>
        <span class="token comment">// 注意</span>
        <span class="token comment">// 若使用了自动引入插件 &quot;unplugin-auto-import&quot; 和 &quot;unplugin-auto-imort&quot;插件，</span>
        <span class="token comment">// 则需要使用下方正则表达式匹配 &quot;element-plus&quot; 和 &quot;element-plus/*&quot; 的模块引入。</span>
        <span class="token comment">// 因为自动引入的语句不是 import { xx } from &#39;element-plus&#39;，</span>
        <span class="token comment">// 而是 import { xx } from &#39;element-plus/es&#39;</span>
		<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span>element<span class="token operator">-</span>plus<span class="token punctuation">)</span><span class="token punctuation">(</span>\\<span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">)?</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),p=[o];function l(i,c){return s(),a("div",null,p)}const d=n(t,[["render",l],["__file","vite-cookbook.html.vue"]]),u=JSON.parse('{"path":"/nodejs/vite-cookbook.html","title":"Vite Cook Book","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1.打包去除 console， debugger 内容","slug":"_1-打包去除-console-debugger-内容","link":"#_1-打包去除-console-debugger-内容","children":[{"level":3,"title":"terser","slug":"terser","link":"#terser","children":[]},{"level":3,"title":"esbuild","slug":"esbuild","link":"#esbuild","children":[]}]},{"level":2,"title":"2.rollup 解析 CommonJS 模块","slug":"_2-rollup-解析-commonjs-模块","link":"#_2-rollup-解析-commonjs-模块","children":[]},{"level":2,"title":"3.自定义模式","slug":"_3-自定义模式","link":"#_3-自定义模式","children":[{"level":3,"title":"开始","slug":"开始","link":"#开始","children":[]}]},{"level":2,"title":"4.打包排除外部模块","slug":"_4-打包排除外部模块","link":"#_4-打包排除外部模块","children":[]}],"git":{"updatedTime":1707126319000},"filePathRelative":"nodejs/vite-cookbook.md"}');export{d as comp,u as data};
