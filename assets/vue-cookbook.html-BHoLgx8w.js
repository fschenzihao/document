import{_ as t,r as p,o,c,a as n,d as s,b as i,e as a}from"./app-CUvyzFzm.js";const l={},u=a(`<h1 id="vue-cookbook" tabindex="-1"><a class="header-anchor" href="#vue-cookbook"><span>Vue Cookbook</span></a></h1><h2 id="vue-warn-相关错误" tabindex="-1"><a class="header-anchor" href="#vue-warn-相关错误"><span>Vue warn 相关错误</span></a></h2><h3 id="警告1" tabindex="-1"><a class="header-anchor" href="#警告1"><span>警告1</span></a></h3><p>[Vue warn] : component inside <code>&lt;Transition&gt;</code> renders non-element root node that cannot be animated <code>&lt;Transition&gt;</code>中的组件渲染无法设置动画的非元素根节点 <strong>解决方案：</strong> Transition 包裹的必须是一个单根的元素。例如： 不能这样 ❌：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应该这样 ✔️：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
	 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
	 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="警告2" tabindex="-1"><a class="header-anchor" href="#警告2"><span>警告2：</span></a></h3><p>[Vue warn] : Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead. 避免依赖于枚举组件实例上的键的应用程序逻辑。在生产模式下，键将为空，以避免性能开销。 <strong>解决方案：</strong></p><hr><h3 id="警告3" tabindex="-1"><a class="header-anchor" href="#警告3"><span>警告3：</span></a></h3><p>[Vue warn] : onMounted is called when there is no active component instance tobe associated with. Lifecycle injection APIs can only be used duringexecution of setup(). If you are using async setup(), make sure to reqisterlifecycle hooks before the first await statement.</p><p>[Vue warn]：onUnmounted is called when there is no active component instanceto be associated with, lifecycle injection APIs can only be used duringexecution of setup(). If you are using async setup(), make sure to registerlifecycle hooks before the first await statement.</p><p>[Vue warn]：withDirectives can only be used inside render functions.</p><p>[Vue warn]：resolveDirective can only be used in render() or setup() .</p><p>[Vue warn]：Invalid VNode type: Symbol(Fragment) (symbol)</p><p>上述问题可能是因为出现了两个 vue 实例。</p><p>在 link 模式引用组件库时出现以上错误，具体说明</p><p>1.组件项目 <code>c:\\ts-erp-ui</code> 已设置打包排除 vue</p><p>2.页面项目 <code>C:\\ts-erp-page</code></p><p>3.<code>ts-erp-page</code> link <code>ts-erp-ui</code></p><p>4.当 <code>ts-erp-page</code> 打包处理 <code>c:\\ts-erp-ui\\dist\\index.mjs</code> 里的 <code>import { ref } from &#39;vue&#39;</code>相关语句时，加载了<code>c:\\ts-erp-ui\\node_modules\\vue</code>下的<code>vue</code>模块。造成两个 vue 实例。</p>`,23),r={href:"http://nodejs.cn/api-v16/modules.html#loading-from-node_modules-folders",target:"_blank",rel:"noopener noreferrer"},d=a(`<p>**疑问：**但是 vite dev 模式下没有出现这个问题。待续。。。</p><p><strong>解决方案：</strong></p><p><code>ts-erp-page</code> 项目设置相关模块的别名</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;vue&#39;</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src/node_modules/vue&#39;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;element-plus&#39;</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src/node_modules/element-plus&#39;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;@element-plus/icons-vue&#39;</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src/node_modules/@element-plus/icons-vue&#39;</span><span class="token punctuation">,</span>                
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="vue-cli-启动后内存溢出" tabindex="-1"><a class="header-anchor" href="#vue-cli-启动后内存溢出"><span>Vue CLI 启动后内存溢出</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>是因为 ForkTsCheckerWebpackPlugin 插件内存限制了 <em>（ForkTsCheckerWebpackPlugin 是一个Webpack插件，用于在单独的进程中运行TypeScript类型检查。）</em></p><p>解决方法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// in vue.config.js</span>

<span class="token keyword">const</span> ForkTsCheckerWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fork-ts-checker-webpack-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">configureWebpack</span><span class="token operator">:</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token comment">// get a reference to the existing ForkTsCheckerWebpackPlugin</span>
    <span class="token keyword">const</span> existingForkTsChecker <span class="token operator">=</span> config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>
      <span class="token parameter">p</span> <span class="token operator">=&gt;</span> p <span class="token keyword">instanceof</span> <span class="token class-name">ForkTsCheckerWebpackPlugin</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// remove the existing ForkTsCheckerWebpackPlugin</span>
    <span class="token comment">// so that we can replace it with our modified version</span>
    config<span class="token punctuation">.</span>plugins <span class="token operator">=</span> config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>
      <span class="token parameter">p</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">ForkTsCheckerWebpackPlugin</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// copy the options from the original ForkTsCheckerWebpackPlugin</span>
    <span class="token comment">// instance and add the memoryLimit property</span>
    <span class="token keyword">const</span> forkTsCheckerOptions <span class="token operator">=</span> existingForkTsChecker<span class="token punctuation">.</span>options<span class="token punctuation">;</span>
    forkTsCheckerOptions<span class="token punctuation">.</span>memoryLimit <span class="token operator">=</span> <span class="token number">8192</span><span class="token punctuation">;</span>

    config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ForkTsCheckerWebpackPlugin</span><span class="token punctuation">(</span>forkTsCheckerOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function k(v,m){const e=p("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("详细信息："),n("a",r,[s("Node.js_从 node_modules 目录加载"),i(e)])]),d])}const h=t(l,[["render",k],["__file","vue-cookbook.html.vue"]]),b=JSON.parse('{"path":"/nodejs/vue-cookbook.html","title":"Vue Cookbook","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Vue warn 相关错误","slug":"vue-warn-相关错误","link":"#vue-warn-相关错误","children":[{"level":3,"title":"警告1","slug":"警告1","link":"#警告1","children":[]},{"level":3,"title":"警告2：","slug":"警告2","link":"#警告2","children":[]},{"level":3,"title":"警告3：","slug":"警告3","link":"#警告3","children":[]},{"level":3,"title":"Vue CLI 启动后内存溢出","slug":"vue-cli-启动后内存溢出","link":"#vue-cli-启动后内存溢出","children":[]}]}],"git":{"updatedTime":1716607518000},"filePathRelative":"nodejs/vue-cookbook.md"}');export{h as comp,b as data};
