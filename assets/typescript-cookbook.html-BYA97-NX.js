import{_ as t,r as p,o,c,a as s,d as a,b as e,e as i}from"./app-CUvyzFzm.js";const l={},r=i(`<h1 id="typescript-cookbook" tabindex="-1"><a class="header-anchor" href="#typescript-cookbook"><span>TypeScript Cookbook</span></a></h1><h3 id="_1-使用含有通配符的模块声明文件-d-ts" tabindex="-1"><a class="header-anchor" href="#_1-使用含有通配符的模块声明文件-d-ts"><span>1. 使用含有通配符的模块声明文件 <code>d.ts</code></span></a></h3><p>项目 <code>docs/examples/erp-configs</code> 文件夹下存在多个自动生成同一个结构的 <code>erp_x.js</code> 配置文件。当在 <code>TypeScript</code> 项目中直接引入 <code>js</code> 文件使用会提示缺少类型声明文件。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> config <span class="token keyword">from</span> <span class="token string">&#39;docs/examples/erp-configs/erp_1&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// error 找不到模块“docs/examples/erp-configs/erp_1”或其相应的类型声明。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>解决方案：为 <code>erp-configs</code> 文件夹下所有 <code>js</code> 文件新建类型声明文件 <code>d.ts</code>。</p><ul><li><p>项目结构。</p><div class="language-tex line-numbers-mode" data-ext="tex" data-title="tex"><pre class="language-tex"><code>项目
|-- docs
	|-- examples
		|-- erp-configs
			|-- erp_1.js
			|-- erp_2.js
			|-- ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置文件。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// erp_1.js 文件的伪代码</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ERP_BizObj</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token constant">ID</span><span class="token operator">:</span> <span class="token number">10010</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;对象1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ERP_BizMTButton</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token constant">ID</span><span class="token operator">:</span> <span class="token number">10086</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;按钮1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>首先使用 <code>vite</code> 的 <code>resolve.alias</code> 文件系统路径别名功能统一配置的入口。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// vite.config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;node:path&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  resolve<span class="token operator">:</span> <span class="token punctuation">{</span>
    alias<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;examples-configs&#39;</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./docs/examples/erp-   configs&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>然后在新建 <code>erp-configs.d.ts</code> 类型声明文件，declare module 描述的模块名可以使用通配符。</p><p>下面示例中，模块名 <code>examples-configs/*</code> 表示适配所有以 <code>examples-configs/</code> 开头的模块名（比如 <code>examples-configs/erp_1</code>）。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// docs/erp-configs.d.ts</span>
<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;examples-configs/*&#39;</span> <span class="token punctuation">{</span>
    <span class="token keyword">interface</span> <span class="token class-name">ERPBizObjConfig</span> <span class="token punctuation">{</span>
        ERP_BizObj<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
        ERP_BizMTButton<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">const</span> config<span class="token operator">:</span> ERPBizObjConfig<span class="token punctuation">;</span>
    <span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置 <code>tsconfig.json</code> 文件。</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;include&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;docs/**/*.d.ts&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>通过 <code>examples-configs</code> 模块名引入配置文件就可以匹配到类型声明了。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> config <span class="token keyword">from</span> <span class="token string">&#39;examples-configs/erp_1&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>有关详细信息，请参阅：</p>`,7),d={href:"https://cn.vitejs.dev/config/shared-options#resolve-alias",target:"_blank",rel:"noopener noreferrer"},u={href:"https://wangdoc.com/typescript/declare#declare-moduledeclare-namespace",target:"_blank",rel:"noopener noreferrer"},k={href:"https://wangdoc.com/typescript/tsconfig.json#include",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const n=p("ExternalLinkIcon");return o(),c("div",null,[r,s("ul",null,[s("li",null,[s("p",null,[s("a",d,[a("resolve.alias(Vite)"),e(n)])])]),s("li",null,[s("p",null,[s("a",u,[a("declare module(网道-TypeScript 教程-declare 关键字)"),e(n)])])]),s("li",null,[s("p",null,[s("a",k,[a("tsconfig.include(网道-TypeScript 教程-tsconfig.json 文件)"),e(n)])])])])])}const f=t(l,[["render",v],["__file","typescript-cookbook.html.vue"]]),y=JSON.parse('{"path":"/javascript/typescript-cookbook.html","title":"TypeScript Cookbook","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"1. 使用含有通配符的模块声明文件 d.ts","slug":"_1-使用含有通配符的模块声明文件-d-ts","link":"#_1-使用含有通配符的模块声明文件-d-ts","children":[]}],"git":{"updatedTime":1709905504000},"filePathRelative":"javascript/typescript-cookbook.md"}');export{f as comp,y as data};
